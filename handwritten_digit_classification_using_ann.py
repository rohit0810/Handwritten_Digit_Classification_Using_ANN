# -*- coding: utf-8 -*-
"""Handwritten Digit Classification Using ANN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J2nQ0IPhp0gchuAoYuzy9fQ9pMWCRzk1
"""

import tensorflow

from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense,Flatten

(X_train,y_train),(X_test,y_test)=keras.datasets.mnist.load_data()

X_train.shape

y_train

import matplotlib.pyplot as plt
plt.imshow(X_train[0])

X_train=X_train/255
X_test=X_test/255

model=Sequential()
model.add(Flatten(input_shape=(28,28)))
model.add(Dense(128,activation='relu'))
model.add(Dense(10,activation='softmax'))

model.summary()

model.compile(loss='sparse_categorical_crossentropy',optimizer='Adam',metrics=['accuracy'])

history=model.fit(X_train,y_train,epochs=10,validation_split=0.2)

y_pred=model.predict(X_test)
y_pred=y_pred.argmax(axis=1)

from sklearn.metrics import accuracy_score

accuracy_score(y_pred,y_test)

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])

model.predict(X_test[0].reshape(1,28,28)).argmax(axis=1)[0]

